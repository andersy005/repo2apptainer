import logging

import typer
from repo2docker.utils import is_valid_docker_image_name

from repo2singularity.app import Repo2Singularity

from . import __version__


def version_callback(value: bool):
    if value:
        typer.echo(f'repo2singularity version: {__version__}')
        raise typer.Exit()


def validate_image_name(image_name):
    """
    Validate image_name read by argparse
    Note: Container names must start with an alphanumeric character and
    can then use _ . or - in addition to alphanumeric.
    [a-zA-Z0-9][a-zA-Z0-9_.-]+

    Parameters
    -----------
    image_name : str
             argument read by the argument parser

    Returns
    --------
         unmodified image_name
    Raises
    ------

    TypeError:

        if image_name contains characters that do not
        meet the logic that container names must start
        with an alphanumeric character and can then
        use _ . or - in addition to alphanumeric.
        [a-zA-Z0-9][a-zA-Z0-9_.-]+
    """
    if not image_name:
        return image_name
    elif not is_valid_docker_image_name(image_name):
        msg = (
            f'{image_name} is not a valid image name. Image name '
            'must start with an alphanumeric character and '
            'can then use _ . or - in addition to alphanumeric.'
        )
        raise TypeError(msg)
    return image_name


def cli(
    repo: str,
    ref: str = typer.Option(
        'master', show_default=True, help='Remote repository reference to build. Defaults to master'
    ),
    image_name: str = typer.Option(
        '',
        show_default=True,
        help='Name of image to be built. If unspecified will be autogenerated',
        callback=validate_image_name,
    ),
    push: bool = typer.Option(
        False, show_default=True, help='Push singularity image to image registry'
    ),
    json_logs: bool = typer.Option(
        False, show_default=True, help='Emit JSON logs instead of human readable logs'
    ),
    debug: bool = typer.Option(False, show_default=True, help='Turn on debug logging'),
    version: bool = typer.Option(
        None,
        '--version',
        callback=version_callback,
        is_eager=True,
        help='Print the repo2singularity version and exit.',
    ),
):
    """
    Fetch a repository and build a singularity image.
    """
    r2s = Repo2Singularity()
    r2s.repo = repo
    r2s.ref = ref
    r2s.output_image_spec = image_name
    r2s.json_logs = json_logs
    if debug:
        r2s.log_level = logging.DEBUG
    r2s.initialize()
    r2s.start()


def main():
    return typer.run(cli)
